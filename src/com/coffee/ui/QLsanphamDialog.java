/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.coffee.ui;

import com.coffee.dao.LoaiSanPhamDAO;
import com.coffee.dao.SanPhamDAO;
import com.coffee.entity.LoaiSanPham;
import com.coffee.entity.NhanVien;
import com.coffee.entity.SanPham;
import com.coffee.utils.Auth;
import com.coffee.utils.Helper;
import com.coffee.utils.MsgBox;
import com.coffee.utils.XImage;
import static java.awt.Color.pink;
import static java.awt.Color.red;
import static java.awt.Color.white;
import java.io.File;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class QLsanphamDialog extends javax.swing.JDialog {

    /**
     * Creates new form QLsanphamDialog
     */
    public QLsanphamDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.init();
   
    }
 SanPhamDAO spdao = new SanPhamDAO();
 LoaiSanPhamDAO loaispdao = new  LoaiSanPhamDAO();
 int row = -1;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnsanpham = new javax.swing.JPanel();
        lbl1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbldssanpham = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        lbl2 = new javax.swing.JLabel();
        lblmasanpham = new javax.swing.JLabel();
        lbltensanpham = new javax.swing.JLabel();
        lblmaloai = new javax.swing.JLabel();
        lbldongia = new javax.swing.JLabel();
        txttensp = new javax.swing.JTextField();
        cbbloaisp = new javax.swing.JComboBox<>();
        txtdongia = new javax.swing.JTextField();
        txtmasp = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        lblhinhanh = new javax.swing.JLabel();
        btnchonanhsp = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnmoisp = new javax.swing.JButton();
        btnsuasp = new javax.swing.JButton();
        btnthemsp = new javax.swing.JButton();
        btnxoasp = new javax.swing.JButton();
        lbltieude = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lbl3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbldsmaloai = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        lblmaloaisp = new javax.swing.JLabel();
        lbltenloaisp = new javax.swing.JLabel();
        lblmota = new javax.swing.JLabel();
        txtmaloaisp = new javax.swing.JTextField();
        txttenloaisp = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtmota = new javax.swing.JTextArea();
        btnmoi = new javax.swing.JButton();
        btnthem = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        fileChooser = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("QUẢN LÝ SẢN PHẨM");

        pnsanpham.setBackground(new java.awt.Color(238, 207, 161));

        lbl1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lbl1.setForeground(new java.awt.Color(102, 51, 0));
        lbl1.setText("*SẢN PHẨM - ĐỒ UỐNG - ĐỒ NGỌT");

        tbldssanpham.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        tbldssanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Mã loại SP", "Hình Ảnh", "Đơn giá"
            }
        ));
        tbldssanpham.setRowHeight(20);
        tbldssanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldssanphamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbldssanpham);

        lbl2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lbl2.setForeground(new java.awt.Color(102, 51, 0));
        lbl2.setText("*THÔNG TIN CHI TIẾT ĐỒ UỐNG - ĐỒ NGỌT");

        lblmasanpham.setFont(new java.awt.Font("Times New Roman", 3, 13)); // NOI18N
        lblmasanpham.setForeground(new java.awt.Color(153, 0, 51));
        lblmasanpham.setText("Mã sản phẩm");

        lbltensanpham.setFont(new java.awt.Font("Times New Roman", 3, 13)); // NOI18N
        lbltensanpham.setForeground(new java.awt.Color(153, 0, 51));
        lbltensanpham.setText("Tên sản phẩm");

        lblmaloai.setFont(new java.awt.Font("Times New Roman", 3, 13)); // NOI18N
        lblmaloai.setForeground(new java.awt.Color(153, 0, 51));
        lblmaloai.setText("Mã loại sản phẩm");

        lbldongia.setFont(new java.awt.Font("Times New Roman", 3, 13)); // NOI18N
        lbldongia.setForeground(new java.awt.Color(153, 0, 51));
        lbldongia.setText("Đơn giá");

        txttensp.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N

        cbbloaisp.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        cbbloaisp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DONGOT", "CAFFE", "DOUONG" }));
        cbbloaisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbloaispActionPerformed(evt);
            }
        });

        txtdongia.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N

        txtmasp.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N

        lblhinhanh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        lblhinhanh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblhinhanhMouseClicked(evt);
            }
        });

        btnchonanhsp.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnchonanhsp.setForeground(new java.awt.Color(153, 0, 51));
        btnchonanhsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffee/icon/Desktop.png"))); // NOI18N
        btnchonanhsp.setText("Chọn ảnh sp");
        btnchonanhsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchonanhspActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblhinhanh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(btnchonanhsp)
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblhinhanh, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnchonanhsp, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        btnmoisp.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnmoisp.setForeground(new java.awt.Color(153, 0, 51));
        btnmoisp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffee/icon/Add-icon.png"))); // NOI18N
        btnmoisp.setText("Mới");
        btnmoisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmoispActionPerformed(evt);
            }
        });
        jPanel3.add(btnmoisp);

        btnsuasp.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnsuasp.setForeground(new java.awt.Color(153, 51, 0));
        btnsuasp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffee/icon/Pencil-icon.png"))); // NOI18N
        btnsuasp.setText("Sửa");
        btnsuasp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaspActionPerformed(evt);
            }
        });
        jPanel3.add(btnsuasp);

        btnthemsp.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnthemsp.setForeground(new java.awt.Color(153, 0, 51));
        btnthemsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffee/icon/Save-icon.png"))); // NOI18N
        btnthemsp.setText("Thêm");
        btnthemsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemspActionPerformed(evt);
            }
        });
        jPanel3.add(btnthemsp);

        btnxoasp.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnxoasp.setForeground(new java.awt.Color(153, 51, 0));
        btnxoasp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/coffee/icon/Eraser-icon.png"))); // NOI18N
        btnxoasp.setText("Xóa");
        btnxoasp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaspActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnsanphamLayout = new javax.swing.GroupLayout(pnsanpham);
        pnsanpham.setLayout(pnsanphamLayout);
        pnsanphamLayout.setHorizontalGroup(
            pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnsanphamLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnxoasp)
                .addGap(33077, 33077, 33077))
            .addGroup(pnsanphamLayout.createSequentialGroup()
                .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnsanphamLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnsanphamLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnsanphamLayout.createSequentialGroup()
                                .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblmaloai, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblmasanpham)
                                    .addComponent(lbltensanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbldongia, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnsanphamLayout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(txtmasp, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtdongia, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txttensp, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbloaisp, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnsanphamLayout.createSequentialGroup()
                        .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnsanphamLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32207, 32207, 32207)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 791, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnsanphamLayout.setVerticalGroup(
            pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnsanphamLayout.createSequentialGroup()
                .addComponent(lbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 10, Short.MAX_VALUE)
                    .addComponent(jSeparator3))
                .addGap(18, 18, 18)
                .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnsanphamLayout.createSequentialGroup()
                        .addComponent(lbl2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnsanphamLayout.createSequentialGroup()
                                .addComponent(lblmasanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbltensanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbldongia, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnsanphamLayout.createSequentialGroup()
                                .addComponent(txtmasp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addComponent(txttensp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtdongia, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblmaloai, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbbloaisp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnsanphamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnxoasp))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbltieude.setBackground(new java.awt.Color(238, 207, 161));
        lbltieude.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        lbltieude.setForeground(new java.awt.Color(102, 0, 0));
        lbltieude.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbltieude.setText("QUẢN LÍ THÔNG TIN SẢN PHẨM");

        jPanel2.setBackground(new java.awt.Color(153, 102, 0));

        lbl3.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lbl3.setForeground(new java.awt.Color(255, 255, 255));
        lbl3.setText("*LOẠI SẢN PHẨM");

        tbldsmaloai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã loại SP", "Tên loại SP", "Mô tả"
            }
        ));
        tbldsmaloai.setRowHeight(20);
        tbldsmaloai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldsmaloaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbldsmaloai);

        lblmaloaisp.setFont(new java.awt.Font("Times New Roman", 3, 13)); // NOI18N
        lblmaloaisp.setForeground(new java.awt.Color(204, 204, 204));
        lblmaloaisp.setText("Mã loại sản phẩm");

        lbltenloaisp.setFont(new java.awt.Font("Times New Roman", 3, 13)); // NOI18N
        lbltenloaisp.setForeground(new java.awt.Color(204, 204, 204));
        lbltenloaisp.setText("Tên loại sản phẩm");

        lblmota.setFont(new java.awt.Font("Times New Roman", 3, 13)); // NOI18N
        lblmota.setForeground(new java.awt.Color(204, 204, 204));
        lblmota.setText("Mô tả");

        txtmaloaisp.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N

        txttenloaisp.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        txttenloaisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txttenloaispActionPerformed(evt);
            }
        });

        txtmota.setColumns(20);
        txtmota.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        txtmota.setRows(5);
        jScrollPane3.setViewportView(txtmota);

        btnmoi.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnmoi.setForeground(new java.awt.Color(153, 0, 51));
        btnmoi.setText("Mới");
        btnmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmoiActionPerformed(evt);
            }
        });

        btnthem.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnthem.setForeground(new java.awt.Color(153, 0, 51));
        btnthem.setText("Thêm");
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        btnxoa.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnxoa.setForeground(new java.awt.Color(153, 0, 51));
        btnxoa.setText("Xóa");
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnsua.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        btnsua.setForeground(new java.awt.Color(153, 0, 51));
        btnsua.setText("Sửa");
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txttenloaisp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                        .addComponent(txtmaloaisp, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(lblmota, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnthem)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnmoi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsua)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnxoa))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblmaloaisp, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltenloaisp, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblmaloaisp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtmaloaisp, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbltenloaisp, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttenloaisp, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblmota, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnmoi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnthem, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnxoa, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsua, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileChooser.setApproveButtonText("");
        fileChooser.setApproveButtonToolTipText("");
        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(pnsanpham, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(lbltieude, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(233, 233, 233))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lbltieude, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(323, 323, 323)
                        .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(233, 233, 233))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(pnsanpham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        fileChooser.getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileChooserActionPerformed

    private void btnmoispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmoispActionPerformed
        // TODO add your handling code here:
        this.clearForm();
    }//GEN-LAST:event_btnmoispActionPerformed

    private void btnthemspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemspActionPerformed
        // TODO add your handling code here:
        
        //this.insert();
       if(Helper.checkNullText(txtmasp)&&
              Helper.checkNullText(txttensp)&&
               Helper.checkNullText(txtdongia)&&                              
              checkNullHinh()){
          if(Helper.checkMaSP(txtmasp)&&
               Helper.checkTenSP(txttensp)&&
                 Helper.checkDonGia(txtdongia)){
             
             if(checkTrungMa(txtmasp)){
                insert();
             }
         }
       }
    }//GEN-LAST:event_btnthemspActionPerformed

    private void btnsuaspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaspActionPerformed
        // TODO add your handling code here:
        //this.update();
      if(Helper.checkNullText(txtmasp)&&
              Helper.checkNullText(txttensp)&&
               Helper.checkNullText(txtdongia)&&                              
              checkNullHinh()){
         if(Helper.checkMaSP(txtmasp)&&
                 Helper.checkTenSP(txttensp)&&
                 Helper.checkDonGia(txtdongia)){
            
             if(checkTrungMa(txtmasp)){
                 update();
            }
            }
        }
    }//GEN-LAST:event_btnsuaspActionPerformed

    private void btnxoaspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaspActionPerformed
        // TODO add your handling code here:
        this.delete();
    }//GEN-LAST:event_btnxoaspActionPerformed

    private void tbldssanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldssanphamMouseClicked
        // TODO add your handling code here:
         if(evt.getClickCount()==1){
            this.row = tbldssanpham.getSelectedRow();
           
            this.edit();
        }
    }//GEN-LAST:event_tbldssanphamMouseClicked

    private void lblhinhanhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblhinhanhMouseClicked
        // TODO add your handling code here:
        this.chonAnh();
    }//GEN-LAST:event_lblhinhanhMouseClicked

    private void tbldsmaloaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldsmaloaiMouseClicked
        // TODO add your handling code here:
         if(evt.getClickCount()==1){
            this.row = tbldsmaloai.getSelectedRow();
           
            this.editLoaiSP();
        }
    }//GEN-LAST:event_tbldsmaloaiMouseClicked

    private void btnmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmoiActionPerformed
        // TODO add your handling code here:
        this.clearFormLoaiSP();
    }//GEN-LAST:event_btnmoiActionPerformed

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        // TODO add your handling code here:
        this.insertLoaiSP();
    }//GEN-LAST:event_btnthemActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        // TODO add your handling code here:
        this.deleteLoaiSP();
    }//GEN-LAST:event_btnxoaActionPerformed

    private void cbbloaispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbloaispActionPerformed
        // TODO add your handling code here:
//          this.chonMaLoaiSP();
    }//GEN-LAST:event_cbbloaispActionPerformed


    private void cbbloaispItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbloaispItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbloaispItemStateChanged

    private void txttenloaispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txttenloaispActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txttenloaispActionPerformed

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        // TODO add your handling code here:
        this.updateLoaiSP();
    }//GEN-LAST:event_btnsuaActionPerformed

    private void btnchonanhspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchonanhspActionPerformed
        // TODO add your handling code here:
        this.chonAnh();
    }//GEN-LAST:event_btnchonanhspActionPerformed


    /**
     * @param args the command line arguments
     */
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QLsanphamDialog dialog = new QLsanphamDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnchonanhsp;
    private javax.swing.JButton btnmoi;
    private javax.swing.JButton btnmoisp;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnsuasp;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btnthemsp;
    private javax.swing.JButton btnxoa;
    private javax.swing.JButton btnxoasp;
    private javax.swing.JComboBox<String> cbbloaisp;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lbl1;
    private javax.swing.JLabel lbl2;
    private javax.swing.JLabel lbl3;
    private javax.swing.JLabel lbldongia;
    private javax.swing.JLabel lblhinhanh;
    private javax.swing.JLabel lblmaloai;
    private javax.swing.JLabel lblmaloaisp;
    private javax.swing.JLabel lblmasanpham;
    private javax.swing.JLabel lblmota;
    private javax.swing.JLabel lbltenloaisp;
    private javax.swing.JLabel lbltensanpham;
    private javax.swing.JLabel lbltieude;
    private javax.swing.JPanel pnsanpham;
    private javax.swing.JTable tbldsmaloai;
    private javax.swing.JTable tbldssanpham;
    private javax.swing.JTextField txtdongia;
    private javax.swing.JTextField txtmaloaisp;
    private javax.swing.JTextField txtmasp;
    private javax.swing.JTextArea txtmota;
    private javax.swing.JTextField txttenloaisp;
    private javax.swing.JTextField txttensp;
    // End of variables declaration//GEN-END:variables

private void init() {
        this.setLocationRelativeTo(null);
      // this.setIconImage(Images.getAppIcon());
       this.fillComboBoxMaLoaiSP();
       this.fillToTable();
       this.fillToTableLoaiSP();
      // this.updateStatus();
       this.row = -1;
    }
    
    void fillComboBoxMaLoaiSP(){
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbloaisp.getModel();
       model.removeAllElements();
      List<LoaiSanPham> list = loaispdao.selectAll();
      for(LoaiSanPham loaisp : list){
           model.addElement(loaisp.getMaLoaiSP());
      }
}
     
    
    
    void fillToTable() {
        DefaultTableModel model = (DefaultTableModel) tbldssanpham.getModel();
        model.setRowCount(0);
       
        try {
            List<SanPham> list = spdao.selectAll();
            for (SanPham sp : list) {
                Object[] row = {
                  sp.getMaSP(),sp.getTenSP(),sp.getMaLoaiSP(),sp.getHinhAnh(),sp.getGia()
                };
                model.addRow(row);
            }
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }
    
   
/*public boolean check() {
    List<SanPham> list = spdao.selectAll();
        for (SanPham sp : list) {
            if (txtmasp.getText().equalsIgnoreCase(sp.getMaSP())) {
                MsgBox.alert(this, "Mã của sản phẩm đã bị trùng!");
                return false;
            } else if(txtmasp.getText().equals("")||txttensp.getText().equals("")||txtdongia.getText().equals("")){
                MsgBox.alert(this, "Mời bạn nhập thông tin của  sản phẩm!");
                return false;
            }
        }
        return true;

    }
    void insert(){
       SanPham sp  = getForm();
        try {
            if(check()){
            spdao.insert(sp);
            this.fillToTable();
            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công!");
            }
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thành công!");
        }

    }

    void update(){
      SanPham sp = getForm();
        try {
            spdao.update(sp);
            this.fillToTable();
            MsgBox.alert(this, "Cập nhật thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }
*/
    private void insert() {
        SanPham sp = getForm();
        try {
            spdao.insert(sp);
            this.fillToTable();
            this.clearForm();
            MsgBox.alert(this, "Thêm thành công");
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.alert(this, "Thêm sản phẩm thành công");
        }
    }

    private void update() {
        SanPham sp = getForm();
        try {
            spdao.update(sp);
            this.fillToTable();
            this.clearForm();
            MsgBox.alert(this, "Sửa thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Sửa thành công");
        }
    }
    
    void delete(){
        if(!Auth.isManager()){
            MsgBox.alert(this, "Bạn không có quyền xóa sản phẩm này!");
        }
        else{
            if(MsgBox.confirm(this, "Bạn có muốn xóa hay không?")){
                String masp = txtmasp.getText();
                try {
                    spdao.delete(masp);
                    this.fillToTable();
                    this.clearForm();
                    MsgBox.alert(this, "Xóa thành công!");
                } 
                catch (Exception e) {
                    MsgBox.alert(this, "Xóa thành công!");
                }
            }
        }
    }


    void clearForm(){
        this.setForm(new SanPham());
        this.row = -1;
        
    }
    void clearFormLoaiSP(){
        this.setFormLoaiSP(new LoaiSanPham());
        this.row = -1;
        
    }

    void edit() {
        String masp = (String) tbldssanpham.getValueAt(this.row, 0);
        SanPham sp = spdao.selectById(masp);
         this.setForm(sp);
         
         
    }

    void setForm(SanPham sp){
        int r = tbldssanpham.getSelectedRow();
        txtmasp.setText(sp.getMaSP());
        txttensp.setText(sp.getTenSP());
        txtdongia.setText(String.valueOf(sp.getGia())); 
//        cbbloaisp.setToolTipText(String.valueOf(sp.getMaLoaiSP()));
//        cbbloaisp.setSelectedItem(loaispdao.selectById(sp.getMaLoaiSP())); 
        //cbbloaisp.setSelectedItem(true);
         if (sp.getHinhAnh() != null) {
            lblhinhanh.setToolTipText(sp.getHinhAnh());
            lblhinhanh.setIcon(new ImageIcon(XImage.read("./logos/" + sp.getHinhAnh(), 197, 220)));
        } else {
            lblhinhanh.setIcon(null);
        }
        cbbloaisp.setSelectedItem(tbldssanpham.getValueAt(r, 2));
    }
    SanPham getForm(){
        LoaiSanPham loaisp = new LoaiSanPham();
        SanPham sp = new SanPham();
        sp.setMaSP(txtmasp.getText());
        sp.setTenSP(txttensp.getText());
        sp.setGia(Double.valueOf(txtdongia.getText()));
        sp.setMaLoaiSP(String.valueOf(cbbloaisp.getSelectedItem()));
        sp.setHinhAnh(lblhinhanh.getToolTipText());
        return sp;
    }   
    
    void chonAnh() {
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            XImage.save(file);
            ImageIcon icon = new ImageIcon(XImage.read("./logos/" + file.getName(),197, 220));
            lblhinhanh.setIcon(icon);
            lblhinhanh.setToolTipText(file.getName());
        }
    }
//   void chonMaLoaiSP(){
//       LoaiSanPham  loaisanpham = (LoaiSanPham) cbbloaisp.getSelectedItem();      
//        this.fillToTable();
//        this.row = -1;
//        
//    }
     
   
     void fillToTableLoaiSP() {
        DefaultTableModel model = (DefaultTableModel) tbldsmaloai.getModel();
        model.setRowCount(0);
        try {
            List<LoaiSanPham> list = loaispdao.selectAll();
            for (LoaiSanPham loaisp : list) {
                Object[] row = {
                  loaisp.getMaLoaiSP(),loaisp.getTenLoaiSP(),loaisp.getMoTa()
                };
                model.addRow(row);
            }
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    } 
     
     public boolean checkloaiSP() {
    List<LoaiSanPham> list = loaispdao.selectAll();
        for (LoaiSanPham loaisp : list) {
            if (txtmaloaisp.getText().equalsIgnoreCase(loaisp.getMaLoaiSP())) {
               MsgBox.alert(this, "Mã loại sản phẩm đã bị trùng!");
                return false;
            }
            else if(txtmaloaisp.getText().equals("")||txttenloaisp.getText().equals("")||txtmota.getText().equals("")){
                MsgBox.alert(this, "Mời bạn nhạp thông tin của loại sản phẩm!");
                return false;
            }
        }
        return true;

    }
    void insertLoaiSP(){
       LoaiSanPham loaisp  = getFormLoaiSP();
        try {
            if(checkloaiSP()){
            loaispdao.insert(loaisp);
            this.fillToTableLoaiSP();
            this.clearFormLoaiSP();
//            this.add();
            MsgBox.alert(this, "Thêm mới thành công!");
            }
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Thêm mới thất bại!");
        }

    }
    
    void deleteLoaiSP(){
        if(!Auth.isManager()){
            MsgBox.alert(this, "Bạn không có quyền xóa loại sản phẩm này!");
        }
        else{
            if(MsgBox.confirm(this, "Bạn có muốn xóa hay không?")){
                String maloaisp = txtmaloaisp.getText();
                try {
                    loaispdao.delete(maloaisp);
                    this.fillToTableLoaiSP();
//                    this.add();
                    MsgBox.alert(this, "Xóa thành công!");
                } 
                catch (Exception e) {
                    MsgBox.alert(this, "Xóa thất bại!");
                }
            }
        }
    }

    void updateLoaiSP(){
        LoaiSanPham loaisp = getFormLoaiSP();
        try {
            loaispdao.update(loaisp);
          this.fillToTableLoaiSP();
            this.clearFormLoaiSP();
            MsgBox.alert(this, "Cập nhật thành công!");
        } 
        catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại!");
        }
    }
    
    
     void setFormLoaiSP(LoaiSanPham loaisp){
        txtmaloaisp.setText(loaisp.getMaLoaiSP());
        txttenloaisp.setText(loaisp.getTenLoaiSP());
        txtmota.setText(loaisp.getMoTa());
       
        
    }
    LoaiSanPham getFormLoaiSP(){
        LoaiSanPham loaisp = new LoaiSanPham();
        loaisp.setMaLoaiSP(txtmaloaisp.getText());
        loaisp.setTenLoaiSP(txttenloaisp.getText());
        loaisp.setMoTa(txtmota.getText());
        
        return loaisp;
    }   
//    void addLoaiSP(){
//        this.setFormLoaiSP(new LoaiSanPham());
//        this.row = -1;
//       
//    }

    void editLoaiSP() {
        String maloaisp = (String) tbldsmaloai.getValueAt(this.row, 0);
        LoaiSanPham loaisp = loaispdao.selectById(maloaisp);
         this.setFormLoaiSP(loaisp);
         
         
    }

  public boolean checkTrungMa(JTextField txt) {
        txt.setBackground(white);
        if (spdao.selectById(txt.getText()) == null) {
            return true;
        } else {
            txt.setBackground(red);
            MsgBox.alert(this, txt.getName() + " đã bị tồn tại.");
            return false;
        }
    }  
  public boolean checkNullHinh(){
        if(lblhinhanh.getToolTipText()!=null){
            return true;
        }else{
            MsgBox.alert(this, "Không được để trống hình.");
            return false;
        }
    }
}
